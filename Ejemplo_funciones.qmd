---
format:
  html:
    other-links:
      - text: NASA Open Data
        href: https://data.nasa.gov/
    code-links:
      - text: Data Import Code
        icon: file-code
        href: data-import.py
---

## Cargar librer칤치s y funciones

```{r}
# Cargar librer칤as necesarias
library(dplyr)
library(ggplot2)

# Cargar funciones
source("./app/functions.R")
```


## Cargar y procesar datos

```{r}
# Ejemplo 1: Cargar y procesar datos
cat("=== Ejemplo 1: Cargar datos ===\n")

data_files <- load_and_process_data(file_paths = c("data"))
```

Grupos encontrado

```{r}
cat("Grupos encontrados:", paste(unique(data_files$Group), collapse = ", "), "\n")

```

## Trayectorias y Mapas de Calor

*Mapas de Calor*

游꿛 Mapas de Calor:

1. Mapa Est치ndar (`create_heatmap_plot`)

- Gradientes suaves sin divisiones fuertes
- 15 niveles de densidad para transiciones m치s suaves
- Contornos sutiles en blanco para definici칩n
- C칤rculo del aparato claramente visible en negro
- Plataforma destacada con punto rojo y centro blanco


```{r}
# Crear mapa de calor
heatmap_plot <- create_heatmap_plot(
    data = data_files,
    wm_centr_x = 75,
    wm_centr_y = 40,
    plat_x = 100,
    plat_y = 50,
    radio_wm = 100
)

cat("Gr치ficos creados exitosamente\n")

heatmap_plot
```

*Trayectorias*

```{r}
# Par치metros del aparato
wm_centr_x <- 90.13
wm_centr_y <- 61.3
plat_x <- 100
plat_y <- 50
radio_wm <- 65

# Crear gr치fico de trayectorias
trajectory_plot <- create_trajectory_plot(
  data_files, plat_x, plat_y, wm_centr_x, wm_centr_y, radio_wm
)

trajectory_plot
```


## Entropia


```{r}
# Definir par치metros de la plataforma
plat_x <- 117.8
plat_y <- 38.4

entropy_results <- calculate_group_entropy(data_files, plat_x, plat_y)
print(entropy_results)
```

## Estad칤stica

*Resumen Descriptivo*

```{r}
cat("\n=== Ejemplo 3: Estad칤sticas de resumen ===\n")

summary_stats <- calculate_summary_stats(data_files)
print(summary_stats)
```

*Pruebas*

```{r}
cat("\n=== Ejemplo 4: Pruebas estad칤sticas ===\n")

statistical_results <- perform_statistical_tests(summary_stats)
cat("Tipo de prueba:", statistical_results$test_type, "\n")

if (statistical_results$test_type == "t-test") {
  if (!is.null(statistical_results$distance_test)) {
    cat("P-valor para distancia:", statistical_results$distance_test$p.value, "\n")
  }
  if (!is.null(statistical_results$velocity_test)) {
    cat("P-valor para velocidad:", statistical_results$velocity_test$p.value, "\n")
  }
}

statistical_results
```

# Crear Trayectorias

```{r}
source("./app/simulate_data.R")
```

*Una sola trayectoria*

